package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"cpru-api/graph/model"
	"strconv"
)

// AssignPermissionToUser เป็น resolver สำหรับ mutation assignPermissionToUser
func (r *mutationResolver) AssignPermissionToUser(ctx context.Context, userID int, permissionID int) (*model.UserPermission, error) {
	up, err := r.UserPermissionService.Assign(ctx, userID, permissionID)
	if err != nil {
		return nil, err
	}

	return &model.UserPermission{
		ID:           strconv.Itoa(up.ID),
		UserID:       up.UserID,
		PermissionID: up.PermissionID,
	}, nil
}

// RemovePermissionFromUser เป็น resolver สำหรับ mutation removePermissionFromUser
func (r *mutationResolver) RemovePermissionFromUser(ctx context.Context, userID int, permissionID int) (bool, error) {
	err := r.UserPermissionService.Remove(ctx, userID, permissionID)
	if err != nil {
		return false, err
	}
	return true, nil
}

// UserPermissionsByUserID เป็น resolver สำหรับ query userPermissionsByUserID
func (r *queryResolver) UserPermissionsByUserID(ctx context.Context, userID int) ([]*model.UserPermission, error) {
	list, err := r.UserPermissionService.GetByUserID(ctx, userID)
	if err != nil {
		return nil, err
	}

	var result []*model.UserPermission
	for _, up := range list {
		result = append(result, &model.UserPermission{
			ID:           strconv.Itoa(up.ID),
			UserID:       up.UserID,
			PermissionID: up.PermissionID,
		})
	}
	return result, nil
}

// UserPermissionsByPermissionID เป็น resolver สำหรับ query userPermissionsByPermissionID
func (r *queryResolver) UserPermissionsByPermissionID(ctx context.Context, permissionID int) ([]*model.UserPermission, error) {
	list, err := r.UserPermissionService.GetByPermissionID(ctx, permissionID)
	if err != nil {
		return nil, err
	}

	var result []*model.UserPermission
	for _, up := range list {
		result = append(result, &model.UserPermission{
			ID:           strconv.Itoa(up.ID),
			UserID:       up.UserID,
			PermissionID: up.PermissionID,
		})
	}
	return result, nil
}
